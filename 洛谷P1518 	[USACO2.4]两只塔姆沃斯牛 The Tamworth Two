#include <bits/stdc++.h>
using namespace std;
const int N = 15;
int a[N][N];// 0 - road; 1 - block
int fx, fy, cx, cy;
int t1 = 0, t2 = 0;
void move(int t, int p){
    if(p == 0){ // F
        if(t == 0) fx --;
        else if(t == 1) fy ++;
        else if(t == 2) fx ++;
        else if(t == 3) fy --;
    }else if(p == 1){ // C
        if(t == 0) cx --;
        else if(t == 1) cy ++;
        else if(t == 2) cx ++;
        else if(t == 3) cy --;
    }
}
bool forward(int x, int y, int t){
    if(t == 0) x --;
    else if(t == 1) y ++;
    else if(t == 2) x ++;
    else if(t == 3) y --;
    if(a[x][y] == 0) return true;
    return false;
}
bool check(){
    if(fx == cx && fy == cy) return true;
    return false;
}
int main()
{
    char s = ' ';
    // read
    for(int i=0; i<=11; i++){
        for(int j=0; j<=11; j++){
            if(i == 0 || j == 0 || i == 11 || j == 11){
                a[i][j] = 1;
                continue;
            }
            cin >> s;
            if(s == '*'){
                a[i][j] = 1;
            }
            else if(s == '.') a[i][j] = 0;
            else if(s == 'F'){
                fx = i;
                fy = j;
                a[i][j] = 0;
            }
            else if(s == 'C'){
                cx = i;
                cy = j;
                a[i][j] = 0;
            }
        }
    }
    // move
    int t = 0;
    while(!check()){
        if(t > 100000) break;
        if(forward(fx, fy, t1)) move(t1, 0);
        else t1 ++;
        if(forward(cx, cy, t2)) move(t2, 1);
        else t2 ++;
        if(t1 >= 4) t1 %= 4;
        if(t2 >= 4) t2 %= 4;
        cout << fx << " " << fy << " " << cx << " " << cy << endl;
        t ++;
    }
    if(t > 100000) cout << 0 << endl;
    else cout << t << endl;
    return 0;
}
